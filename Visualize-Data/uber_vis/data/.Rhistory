ar.sim<-arima.sim(model=list(ar=c(.9,-.2)),n=100)
ar.sim
ar.sim<-arima.sim(model=list(ar=c(50,500)),n=100)
plot(ar.sim)
ar.sim<-arima.sim(model=list(ar=c(50,1)),n=100)
ma.sim<-arima.sim(model=list(ma=c(-.7,.1)),n=100)
ma.sim
plot(ma.sim)
setwd("/Users/frankcorrigan/Repositories/Udacity/Visualize-Data/uber_vis/data")
library(ggplot2)
library(dplyr)
data <- read.csv('surge_data_forRanalysis.csv')
data
c_time <- rev( data$date )
difftime(c_time[1:(length(c_time)-1)] , c_time[2:length(c_time)])
sort(data$date)[1]
sort(data$date)[length(data$date)]
nrow(data) # 2008 due to the 5.x intervals
names(data)[2] <- 'datetime'
data$date <- factor(as.Date(data$datetime))
data$time <- strftime(data$datetime, format="%H:%M:%S")
data$weekend <- ifelse(data$dayofweek > 4, "weekend", "weekday")
t <- ggplot(data=data, aes(x=time, y=surge, group=weekend, colour=weekend)) +
geom_step() +
facet_wrap(~date) +
theme_light()
t
t2 <- ggplot(data=data, aes(x=as.POSIXct(paste("20010101", time), format="%Y%m%d %H:%M:%S"), y=surge, group=date, colour=date)) +
geom_step() +
theme_light() +
scale_x_datetime(limits = c(min(as.POSIXct(data$time, format="%Y-%m-%d %H:%M:%S")), max(as.POSIXct(data$time, format="%Y-%m-%d %H:%M:%S"))), minor_breaks=date_breaks("6 hour"), labels=my_format("%H:%M")) +
labs(x="Hour of Day", y="Surge Rate", title="Late Jan 2016 Uber Surge Rate Between Penn & NYU in 5 Minute Intervals")
library(scales)
t2 <- ggplot(data=data, aes(x=as.POSIXct(paste("20010101", time), format="%Y%m%d %H:%M:%S"), y=surge, group=date, colour=date)) +
geom_step() +
theme_light() +
scale_x_datetime(limits = c(min(as.POSIXct(data$time, format="%Y-%m-%d %H:%M:%S")), max(as.POSIXct(data$time, format="%Y-%m-%d %H:%M:%S"))), minor_breaks=date_breaks("6 hour"), labels=my_format("%H:%M")) +
labs(x="Hour of Day", y="Surge Rate", title="Late Jan 2016 Uber Surge Rate Between Penn & NYU in 5 Minute Intervals")
my_format <- function (format = "%Y-%m-%d %H:%M:%S") {
function(x) format(x, format)
}
t2 <- ggplot(data=data, aes(x=as.POSIXct(paste("20010101", time), format="%Y%m%d %H:%M:%S"), y=surge, group=date, colour=date)) +
geom_step() +
theme_light() +
scale_x_datetime(limits = c(min(as.POSIXct(data$time, format="%Y-%m-%d %H:%M:%S")), max(as.POSIXct(data$time, format="%Y-%m-%d %H:%M:%S"))), minor_breaks=date_breaks("6 hour"), labels=my_format("%H:%M")) +
labs(x="Hour of Day", y="Surge Rate", title="Late Jan 2016 Uber Surge Rate Between Penn & NYU in 5 Minute Intervals")
t2
wdata <- data %>% select(time, weekend, surge) %>% group_by(time, weekend) %>% summarize(avgsurge=mean(surge))
wdata$time <- gsub( ":", "", as.character(wdata$time))
wdata$time_formatted <- as.POSIXct(paste("20010101", wdata$time), format="%Y%m%d %H%M")
p2 <- ggplot(wdata, aes(x=time_formatted, y=avgsurge, group=weekend, color=weekend)) + geom_step()
p2
p2 + scale_x_datetime(limits = c(min(wdata$time_formatted), max(wdata$time_formatted)), minor_breaks=date_breaks("6 hour"), labels=my_format("%H:%M"))
library(chron)
group <- seq(0,55,5)
data$fmintervals <- sapply(data$datetime, function(x){
x <- minutes(x)
for(i in 2:length(group)){
if(x < group[i]) {return(group[i-1]); break}
else if(x >= group[length(group)]) return(group[length(group)])
}
})
data["fmintervals"] <- lapply(data["fmintervals"], function(x) ifelse(nchar(x) < 2, paste0("0",x), x))
data["hourofday"] <- lapply(data["hourofday"], function(x) ifelse(nchar(x) < 2, paste0("0",x), x))
data$hms <- paste0(data$hourofday, data$fmintervals, "00")
data$date <- gsub( "-", "", as.character(data$date))
data$date_graph <- as.POSIXct(paste0(data$date, " ", data$hour, data$fmintervals, "00"), format="%Y%m%d %H%M%S")
data$time2 <- strftime(data$date_graph, format="%H:%M:%S")
blockchart <- data %>% group_by(dayofweek, hourofday) %>% summarize(avgsurge=mean(surge))
blockchart$dayofweek <- as.factor(as.integer(blockchart$dayofweek) + 1)
blockchart$hourofday <- as.factor(as.integer(blockchart$hourofday) + 1)
blockchart$avgsurge <- as.factor(blockchart$avgsurge)
names(blockchart) <- c("day", "hour", "value")
blockchart
filter(blockchart, dayofweek %in% c(1,2,3,4)) %>% filter(hourofday %in% c("06","07","08","09", "10", "18", "19", "20")) %>% group_by(hourofday) %>% summarize(mean_surge = mean(avgsurge))
blockchart
blockchart <- data %>% group_by(dayofweek, hourofday) %>% summarize(avgsurge=mean(surge))
blockchart$dayofweek <- as.factor(as.integer(blockchart$dayofweek) + 1)
blockchart$hourofday <- as.factor(as.integer(blockchart$hourofday) + 1)
blockchart$avgsurge <- as.factor(blockchart$avgsurge)
filter(blockchart, dayofweek %in% c(1,2,3,4)) %>% filter(hourofday %in% c("06","07","08","09", "10", "18", "19", "20")) %>% group_by(hourofday) %>% summarize(mean_surge = mean(avgsurge))
blockchart <- data %>% group_by(dayofweek, hourofday) %>% summarize(avgsurge=mean(surge))
blockchart
anal_blockchart <- data %>% group_by(dayofweek, hourofday) %>% summarize(avgsurge=mean(surge))
filter(anal_blockchart, dayofweek %in% c(1,2,3,4)) %>% filter(hourofday %in% c("06","07","08","09", "10", "18", "19", "20")) %>% group_by(hourofday) %>% summarize(mean_surge = mean(avgsurge))
anal_blockchart <- data %>% group_by(dayofweek, hourofday) %>% summarize(avgsurge=mean(surge))
filter(anal_blockchart, dayofweek %in% c(2,3,4)) %>% filter(hourofday %in% c("06","07","08","09", "10", "18", "19", "20")) %>% group_by(hourofday) %>% summarize(mean_surge = mean(avgsurge))
anal_blockchart <- data %>% group_by(dayofweek, hourofday) %>% summarize(avgsurge=mean(surge))
filter(anal_blockchart, dayofweek %in% c(2,3,4)) %>% filter(hourofday %in% c("05", "06","07","08","09", "10", "18", "19", "20")) %>% group_by(hourofday) %>% summarize(mean_surge = mean(avgsurge))
