scale_y_log10() +
ggtitle("Sum of Contributions") +
geom_jitter(alpha=1/10) +
geom_smooth(method="loess") # noisy
# Count of Monetary Contributions for 'Real' cadidates before Romney's nomination date
p2 <- ggplot(aes(x = date, y = n, color = cand_nm),
data = pre_nom) +
scale_y_log10() +
ggtitle("# of Contributions") +
geom_jitter(alpha=1/10) +
geom_smooth(method="loess") # still noisy
grid.arrange(p1, p2)
```
Another way to look at this, maybe, is via cumulative contributions. And I'll subset the data to only contributions leading up to the election. The result? A beautiful graph. That's race data. It clearly shows the importance of contribution count.
```{r echo=FALSE, fig.height=12}
pre_elec <- filter(data, date < elec_date, cand_nm %in% for_real) %>%
group_by(cand_nm, date) %>%
summarize(n = n(), total = sum(contb_receipt_amt)) %>%
mutate(cumn = cumsum(n), cumtotal = cumsum(total))
# Sum of Monetary Contributions for 'Real' cadidates before Romney's nomination date
p1 <- ggplot(aes(x = date, y = cumtotal, color = cand_nm),
data = pre_elec) +
scale_y_log10() +
ggtitle("Cumsum of Contributions") +
geom_jitter(alpha=1/10) +
geom_smooth(method="loess")
# Count of Monetary Contributions for 'Real' cadidates before Romney's nomination date
p2 <- ggplot(aes(x = date, y = cumn, color = cand_nm),
data = pre_elec) +
scale_y_log10() +
ggtitle("Cum # of Contributions") +
geom_jitter(alpha=1/10) +
geom_smooth(method="loess")
grid.arrange(p1, p2) # Yes! Now this looks like race data to me!
```
Next: Locations. Where are contributors and can we identify clusters of contributors to a specific political party? All I need is a simple normalized bar chart showing the split between parties across zip codes. Lots of variation from zip to zip.
```{r echo=FALSE}
# Is there a clear difference among zip codes where donations are going?
by_zip <- filter(data, party %in% c("democrat", "republican")) %>%
group_by(zip, party) %>%
summarize(n = n(), total = sum(contb_receipt_amt)) %>%
mutate(pct = n/sum(n))
ggplot(by_zip, aes(x=zip, y=pct, fill=party)) +
geom_bar(stat='identity') +
scale_fill_manual(values=c("blue", "red"))
```
Variation is good for modeling, but as humans we need a map to get a sense of where these clusters live. Lots of blue (Democrat) in Miami, Tampa, and to a lesser extent Orlando and then red (Republican) spread out across the state. This makes sense.
```{r echo=FALSE, fig.height=12}
formap <- left_join(by_zip, zipcode, by='zip') # Ahh, let's drop these GA and other values
formap_dem <- subset(formap, party == "democrat")
formap_dem$dom_party <- ifelse(formap_dem$pct > 0.5, c("Democrat"), c("Republican")) # So if more people contributed to Democrat in this zip... it becomes a democrat zip
ggplot(aes(x=longitude, y=latitude, colour=dom_party), data=formap_dem) +
geom_point() +
scale_color_manual(values=c("blue", "red"))
```
Next: Wishful thinking... I was hoping to seperate 'young' versus 'old' using the occupation data grouping RETIRED into old and everyone else into young, however, the data comes out to be roughly 70young/30old where I thought it would be heavier weighted toward 'old'. This does make sense though when you realize that only 15% of the US population is over the age of 65... so 30% is relatively high.
```{r echo=FALSE}
data$retired <- ifelse(data$contbr_occupation == "RETIRED", "YES", "NO")
test <- table(data$retired, data$party)
prop.table(test, 2)
```
And just a few more things before we start to model this. In total, we saw a lot of contributions coming in 2 months within the election, but what if we break this down by candidate? Here  plot the median contribution by day per candidate. Maybe not important, but interesting that median donation size typically falls as election nears -- that probably says something about who donates when. In these graphs, the red line indicates Romney's nomination date and blue the election date. We can see who left the race early (Bachmann, Cain, Perry).
```{r echo=FALSE}
don_by_date <- subset(data, contb_receipt_amt > 0 & contb_receipt_amt < 25000) %>%
group_by(cand_nm, date) %>%
summarize(donation = median(contb_receipt_amt))
ggplot(aes(x=date, y=donation), # Donation size got smaller as time went on..
data = don_by_date) +
geom_line() +
geom_vline(xintercept = as.numeric(nom_date), color = "blue", linetype = 'longdash') +
geom_vline(xintercept = as.numeric(elec_date), color = "red", linetype = 'longdash') +
facet_wrap(~cand_nm) +
scale_y_log10() +
geom_smooth()
```
To confirm the notion that number of contributions is more important than sum of them, lets look at the same graph as above but by contribution count over time. Ahh, two are not like the others...
```{r echo=FALSE}
don_by_date <- filter(data, contb_receipt_amt > 0 & contb_receipt_amt < 15000 & date < elec_date) %>%
group_by(cand_nm, date) %>%
summarize(donation = n())
ggplot(aes(x=date, y=donation),
data = don_by_date) +
geom_jitter(alpha = 1/20) +
geom_vline(xintercept = as.numeric(nom_date), color = "red", linetype = 'longdash') +
geom_vline(xintercept = as.numeric(elec_date), color = "green", linetype = 'longdash') +
facet_wrap(~cand_nm) +
scale_y_log10() +
geom_smooth()
# Two.. are not like the others...
# This is most interesting thing I've seen. Using a linear trend... Mitt, Barak, and Ron Paul, Newt, and Santorum all had increased popularity
```
As expected.
What was learned during the mulitivariate analysis? Mitt Romney raised the most money in the 2016 US Presidential election and on averaged received larger contributions than Barack Obama (however across the board small contributions are the norm). We compared this to the count of contributions by each candiata. Each measure tells a different story fo the race. Maping contributors by zipcode we see bigger clusters of Democratic contributions in the Miami, Tampa, and Orlando areas. We'll use these lessons in an attempt to create a model that uses contributor characteristics to predict which political party that individual will contribute to.
# Modeling
In this section we create two models, one logistics and one loess. The logistic regression model is an attempt to use a contributor's characteristics (location, contribution amount, etc.) to predict which political party they are contributing to. The second model, a locally weighted scatterplot smoothing model, fits the number of contributions per day for each candidate.
### Model 1: Logistic Regression
In this model, the dependent variable is binary -- Democratic contribution or Republican? -- so we use a logistic regression. I began by splitting the data into training and testing sets and start with a model that uses latitude, longitude, and contribution amount.
sub <- filter(data, party %in% c("democrat", "republican"))
smp <- sample_n(sub, nrow(sub))
## 75% of the sample size for training
smp_size <- floor(0.75 * nrow(smp))
## set the seed to make your partition reproductible
set.seed(1234)
train_ind <- sample(seq_len(nrow(smp)), size = smp_size)
training <- smp[train_ind, ]
testing <- smp[-train_ind, ]
```
```{r}
## Probability of donating to Republican
model1 <- glm(as.factor(party) ~ contb_receipt_amt,
data = training,
family = "binomial")
summary(model1)
exp(1.82)
exp(.00182)
anova(model1, test="Chisq")
with(model1, pchisq(null.deviance - deviance, df.null - df.residual, lower.tail = FALSE))
predicted_probs = predict(model1, testing, type="response")
predicted_party = rep("democrat", nrow(testing))
predicted_party[predicted_probs > 0.5] = "republican"
table(predicted_party, testing$party)
mean(predicted_party != testing$party)
model1 <- glm(as.factor(party) ~ latitude,
data = training,
family = "binomial")
head(data)
rm(list=ls())
setwd("C:/Users/fcorrigan/Documents/Udacity/Data-Analysis-with-R/") # for Windows
Libraries used for... everything
library(dplyr)
library(ggplot2)
library(ggthemes)
library(gridExtra)
data <- read.csv("FEC_2012FL_Data.csv", row.names = NULL) # for Windows
str(data)
data$date <- as.Date(data$contb_receipt_dt, format = "%d-%b-%y")
nom_date <- as.Date("28-AUG-12", format = "%d-%b-%y")
elec_date <- as.Date("06-NOV-12", format = "%d-%b-%y")
data$days_from_elec <- as.integer(elec_date - data$date)
summary(data$date)
summary(data$days_from_elec)
qplot(date, data = data, geom = "histogram", binwidth=7) +
geom_vline(xintercept=as.numeric(elec_date), color="red")
ta
table(data$cand_nm)
data <- subset(data, cand_nm != "Stein, Jill" & cand_nm != "McCotter, Thaddeus G") # Removes 46 observations
g1 <- ggplot(aes(x=cand_nm), data=data) +
geom_bar() +
ggtitle("Count of Contributions by Candidate") +
coord_flip() # Barak most contributions by far, followed by romney, followed by Ron Paul
g2<- ggplot(aes(x=cand_nm), data=subset(data, date < nom_date)) + # Even playing field using only days before Romney nominated Repub candidate
geom_bar() +
ggtitle("Count of Pre-Nomination Contributions Date by Candidate") +
coord_flip() # Not a huge difference. Romney and Barack still way out front
grid.arrange(g1,g2,ncol=2)
contrib_per_day_in_race <- data %>%
group_by(cand_nm) %>%
summarize(min = min(date), max = max(date), n=n()) %>%
mutate(days = max-min, contrib_per_day = n/as.numeric(days))
```
```{r echo=FALSE}
ggplot(aes(x=cand_nm, y=contrib_per_day), data=contrib_per_day_in_race) +
geom_bar(stat="identity") +
coord_flip()
data$party <- ifelse(data$cand_nm == "Obama, Barack", c("democrat"), c("republican"))
data$party[data$cand_nm %in% c("Johnson, Gary Earl", "Roemer, Charles E. 'Buddy' III")] <- "libertarian/other"
table(data$party)
ggplot(aes(x=party), data=data) +
geom_bar(stat="bin", fill=c("blue", "grey", "red"))
library(zipcode) # https://cran.r-project.org/web/packages/zipcode/
data$zip = clean.zipcodes(data$contbr_zip) # Leaves us with many 9-digit zips. Shorten to 5-digit zips.
data$zip = substr(data$zip, 1, 5)
length(table(data$zip))
data <- subset(data, zip >= 30000 & zip < 40000) # We lose 423 observations
data(zipcode)
data <- left_join(data, zipcode, by="zip")
# TODO -- check contb_city with zipcode city
data <- filter(data, state == "FL")
head(data)
data <- subset(data, contb_receipt_amt < 25000 & contb_receipt_amt > -25000)
data <- subset(data, contb_receipt_amt > 0)
data$over200 <- ifelse(data$contb_receipt_amt > 200, "Large", "Small")
data$retired <- ifelse(data$contbr_occupation == "RETIRED", "YES", "NO")
sub <- filter(data, party %in% c("democrat", "republican"))
smp <- sample_n(sub, nrow(sub))
set.seed(1234)
train_ind <- sample(seq_len(nrow(smp)), size = smp_size)
training <- smp[train_ind, ]
testing <- smp[-train_ind, ]
smp_size <- floor(0.75 * nrow(smp))
set.seed(1234)
train_ind <- sample(seq_len(nrow(smp)), size = smp_size)
training <- smp[train_ind, ]
testing <- smp[-train_ind, ]
model1 <- glm(as.factor(party) ~ latitude,
data = training,
family = "binomial")
summary(model1)
anova(model1, test="Chisq")
with(model1, pchisq(null.deviance - deviance, df.null - df.residual, lower.tail = FALSE))
predicted_probs = predict(model1, testing, type="response")
predicted_party = rep("democrat", nrow(testing))
predicted_party[predicted_probs > 0.5] = "republican"
table(predicted_party, testing$party)
mean(predicted_party != testing$party)
anova(model1, test="Chisq")
names(data)
## Probability of donating to Republican
model1 <- glm(as.factor(party) ~ latitude + longitude + contb_receipt_amt + retired + over200,
data = training,
family = "binomial")
summary(model1)
anova(model1, test="Chisq")
with(model1, pchisq(null.deviance - deviance, df.null - df.residual, lower.tail = FALSE))
predicted_probs = predict(model1, testing, type="response")
predicted_party = rep("democrat", nrow(testing))
predicted_party[predicted_probs > 0.5] = "republican"
table(predicted_party, testing$party)
mean(predicted_party != testing$party)
exp(model1$ceoff)
exp(model1$coeff)
test <- table(data$retired, data$party)
prop.table(test, 2)
with(model1, pchisq(null.deviance - deviance, df.null - df.residual, lower.tail = FALSE))
predicted_probs = predict(model1, testing, type="response")
predicted_party = rep("democrat", nrow(testing))
predicted_party[predicted_probs > 0.5] = "republican"
table(predicted_party, testing$party)
mean(predicted_party != testing$party)
model2 <- glm(as.factor(party) ~ retired + over200,
data = training,
family = "binomial")
summary(model2)
exp(model1$coeff)
exp(model2$coeff)
with(model2, pchisq(null.deviance - deviance, df.null - df.residual, lower.tail = FALSE))
predicted_probs = predict(model2, testing, type="response")
predicted_party = rep("democrat", nrow(testing))
predicted_party[predicted_probs > 0.5] = "republican"
table(predicted_party, testing$party)
mean(predicted_party != testing$party)
model2 <- glm(as.factor(party) ~ retired,
data = training,
family = "binomial")
summary(model2)
exp(model2$coeff)
with(model2, pchisq(null.deviance - deviance, df.null - df.residual, lower.tail = FALSE))
predicted_probs = predict(model2, testing, type="response")
predicted_party = rep("democrat", nrow(testing))
predicted_party[predicted_probs > 0.5] = "republican"
table(predicted_party, testing$party)
mean(predicted_party != testing$party)
loess_data <- filter(data, party %in% c("democrat", "republican") %>% group_by(date, cand_nm) %>% summarize(cumsum=cumsum(n()))
loess_data <- filter(data, party %in% c("democrat", "republican")) %>%
group_by(date, cand_nm) %>%
summarize(cumsum=cumsum(n()))
loess_data <- filter(data, party %in% c("democrat", "republican"))
head(loess_data)
loess_data <- filter(data, party %in% c("democrat", "republican")) %>%
group_by(date, cand_nm)
head(loess_data)
loess_data <- filter(data, party %in% c("democrat", "republican")) %>%
group_by(date, cand_nm) %>%
summarize(n=n(), cumsum=cumsum(n))
head(loess_data)
loess_data <- filter(data, date < elec_date, cand_nm %in% for_real) %>%
group_by(cand_nm, date) %>%
summarize(n = n(), total = sum(contb_receipt_amt)) %>%
mutate(cumn = cumsum(n), cumtotal = cumsum(total))
for_real <- c("Cain, Herman", "Gingrich, Newt", "Obama, Barack", "Paul, Ron", "Romney, Mitt", "Santorum, Rick") # The other guys are noise...
loess_data <- filter(data, date < elec_date, cand_nm %in% for_real) %>%
group_by(cand_nm, date) %>%
summarize(n = n(), total = sum(contb_receipt_amt)) %>%
mutate(cumn = cumsum(n), cumtotal = cumsum(total))
loess_data
loess_model <- loess(cumtotal ~ cand_nm + date, data = loess_data)
loess_model <- loess(cumtotal ~ as.numeric(cand_nm) + date, data = loess_data)
loess_data <- filter(data, date < elec_date, cand_nm %in% for_real) %>%
group_by(party, date) %>%
summarize(n = n(), total = sum(contb_receipt_amt)) %>%
mutate(cumn = cumsum(n), cumtotal = cumsum(total))
loess_data
loess_model <- loess(cumtotal ~ date, data = loess_data)
sub <- filter(data, party %in% c("democrat", "republican"))
## Sample for modeling
smp <- sample_n(sub, 5000)
## 75% of the sample size for training
smp_size <- floor(0.75 * nrow(smp))
## set the seed to make your partition reproductible
set.seed(1234)
train_ind <- sample(seq_len(nrow(smp)), size = smp_size)
training <- smp[train_ind, ]
testing <- smp[-train_ind, ]
## Probability of donating to Republican
model1 <- glm(as.factor(party) ~ latitude + longitude + contb_receipt_amt + retired + over200,
data = training,
family = "binomial")
summary(model1)
exp(model1$coeff)
with(model1, pchisq(null.deviance - deviance, df.null - df.residual, lower.tail = FALSE))
predicted_probs = predict(model1, testing, type="response")
predicted_party = rep("democrat", nrow(testing))
predicted_party[predicted_probs > 0.5] = "republican"
table(predicted_party, testing$party)
mean(predicted_party != testing$party)
qplot(contb_receipt_amt, data = data, geom = "histogram", binwidth = 25, color = "red") +
facet_wrap(~party) +
scale_y_log10()
qplot(contb_receipt_amt, data = data, geom = "histogram", binwidth = 25, color = "red")
qplot(contb_receipt_amt, data = data, geom = "histogram", binwidth = 25, color = "red") +
facet_wrap(~party)
qplot(contb_receipt_amt, data = data, geom = "histogram", binwidth = 25, color = "red") +
facet_wrap(~party) +
scale_y_log10()
qplot(contb_receipt_amt, data = data, geom = "histogram", binwidth = 25, color = "red") +
facet_wrap(~party) +
scale_x_log10()
qplot(contb_receipt_amt, data = data, geom = "histogram", binwidth = 25, color = "red") +
facet_wrap(~party) +
scale_y_sqrt()
qplot(contb_receipt_amt, data = data, geom = "histogram", binwidth = 25, color = "red") +
facet_wrap(~party) +
scale_y_log10()
pre_elec <- filter(data, date < elec_date, cand_nm %in% for_real) %>%
group_by(cand_nm, date) %>%
summarize(n = n(), total = sum(contb_receipt_amt)) %>%
mutate(cumn = cumsum(n), cumtotal = cumsum(total))
# Sum of Monetary Contributions for 'Real' cadidates before Romney's nomination date
p1 <- ggplot(aes(x = date, y = cumtotal, color = cand_nm),
data = pre_elec) +
scale_y_log10() +
ggtitle("Cumsum of Contributions") +
geom_jitter(alpha=1/10) +
geom_smooth(method="loess")
# Count of Monetary Contributions for 'Real' cadidates before Romney's nomination date
p2 <- ggplot(aes(x = date, y = cumn, color = cand_nm),
data = pre_elec) +
scale_y_log10() +
ggtitle("Cum # of Contributions") +
geom_jitter(alpha=1/10) +
geom_smooth(method="loess") +
grid.arrange(p1, p2)
p1 <- ggplot(aes(x = date, y = cumtotal, color = cand_nm),
data = pre_elec) +
scale_y_log10() +
ggtitle("Cumsum of Contributions") +
geom_jitter(alpha=1/10) +
geom_smooth(method="loess")
# Count of Monetary Contributions for 'Real' cadidates before Romney's nomination date
p2 <- ggplot(aes(x = date, y = cumn, color = cand_nm),
data = pre_elec) +
scale_y_log10() +
ggtitle("Cum # of Contributions") +
geom_jitter(alpha=1/10) +
geom_smooth(method="loess")
grid.arrange(p1, p2)
# Sum of Monetary Contributions for 'Real' cadidates before Romney's nomination date
p1 <- ggplot(aes(x = date, y = cumtotal, color = cand_nm),
data = pre_elec) +
scale_y_log10() +
labs(title="Cumulative Sum of Contributions", x="Date", y="Cumulative Sum") +
geom_jitter(alpha=1/10) +
geom_smooth(method="loess")
# Count of Monetary Contributions for 'Real' cadidates before Romney's nomination date
p2 <- ggplot(aes(x = date, y = cumn, color = cand_nm),
data = pre_elec) +
scale_y_log10() +
labs(title="Cumulative Count of Contributions", x="Date", y="Cumulative Count") +
geom_jitter(alpha=1/10) +
geom_smooth(method="loess")
grid.arrange(p1, p2)
p1 <- ggplot(aes(x = date, y = cumtotal, color = cand_nm),
data = pre_elec) +
scale_y_log10() +
labs(title="Cumulative Sum of Contributions", x="Date", y="Cumulative Sum") +
geom_jitter(alpha=1/10) +
geom_smooth(method="loess") +
theme_hc()
# Count of Monetary Contributions for 'Real' cadidates before Romney's nomination date
p2 <- ggplot(aes(x = date, y = cumn, color = cand_nm),
data = pre_elec) +
scale_y_log10() +
labs(title="Cumulative Count of Contributions", x="Date", y="Cumulative Count") +
geom_jitter(alpha=1/10) +
geom_smooth(method="loess") +
theme_hc()
grid.arrange(p1, p2)
p1 <- ggplot(aes(x = date, y = cumtotal, color = cand_nm),
data = pre_elec) +
scale_y_log10() +
labs(title="Cumulative Sum of Contributions", x="Date", y="Cumulative Sum") +
geom_jitter(alpha=1/10) +
geom_smooth(method="loess") +
theme_hc()
# Count of Monetary Contributions for 'Real' cadidates before Romney's nomination date
p2 <- ggplot(aes(x = date, y = cumn, color = cand_nm),
data = pre_elec) +
scale_y_log10() +
labs(title="Cumulative Count of Contributions", x="Date", y="Cumulative Count") +
geom_jitter(alpha=1/10) +
geom_smooth(method="loess") +
theme_pander()
grid.arrange(p1, p2)
p1 <- ggplot(aes(x = date, y = cumtotal, color = cand_nm),
data = pre_elec) +
scale_y_log10() +
labs(title="Cumulative Sum of Contributions", x="Date", y="Cumulative Sum") +
geom_jitter(alpha=1/10) +
geom_smooth(method="loess") +
theme_calc()
# Count of Monetary Contributions for 'Real' cadidates before Romney's nomination date
p2 <- ggplot(aes(x = date, y = cumn, color = cand_nm),
data = pre_elec) +
scale_y_log10() +
labs(title="Cumulative Count of Contributions", x="Date", y="Cumulative Count") +
geom_jitter(alpha=1/10) +
geom_smooth(method="loess") +
theme_pander()
grid.arrange(p1, p2)
p1 <- ggplot(aes(x = date, y = cumtotal, color = cand_nm),
data = pre_elec) +
scale_y_log10() +
labs(title="Cumulative Sum of Contributions", x="Date", y="Cumulative Sum") +
geom_jitter(alpha=1/10) +
geom_smooth(method="loess") +
theme_pander()
# Count of Monetary Contributions for 'Real' cadidates before Romney's nomination date
p2 <- ggplot(aes(x = date, y = cumn, color = cand_nm),
data = pre_elec) +
scale_y_log10() +
labs(title="Cumulative Count of Contributions", x="Date", y="Cumulative Count") +
geom_jitter(alpha=1/10) +
geom_smooth(method="loess") +
theme_pander()
grid.arrange(p1, p2)
ggplot(aes(x=longitude, y=latitude, colour=dom_party), data=formap_dem) +
geom_point() +
scale_color_manual(values=c("blue", "red"))
ggplot(aes(x=longitude, y=latitude, colour=dom_party), data=formap_dem) +
geom_point() +
scale_color_manual(values=c("blue", "red")) +
theme_map()
formap <- left_join(by_zip, zipcode, by='zip') # Ahh, let's drop these GA and other values
formap_dem <- subset(formap, party == "democrat")
formap_dem$dom_party <- ifelse(formap_dem$pct > 0.5, c("Democrat"), c("Republican")) # So if more people contributed to Democrat in this zip... it becomes a democrat zip
ggplot(aes(x=longitude, y=latitude, colour=dom_party), data=formap_dem) +
geom_point() +
scale_color_manual(values=c("blue", "red"))
formap <- left_join(by_zip, zipcode, by='zip') # Ahh, let's drop these GA and other values
# Is there a clear difference among zip codes where donations are going?
by_zip <- filter(data, party %in% c("democrat", "republican")) %>%
group_by(zip, party) %>%
summarize(n = n(), total = sum(contb_receipt_amt)) %>%
mutate(pct = n/sum(n))
formap <- left_join(by_zip, zipcode, by='zip') # Ahh, let's drop these GA and other values
formap_dem <- subset(formap, party == "democrat")
formap_dem$dom_party <- ifelse(formap_dem$pct > 0.5, c("Democrat"), c("Republican")) # So if more people contributed to Democrat in this zip... it becomes a democrat zip
ggplot(aes(x=longitude, y=latitude, colour=dom_party), data=formap_dem) +
geom_point() +
scale_color_manual(values=c("blue", "red"))
ggplot(aes(x=longitude, y=latitude, colour=dom_party), data=formap_dem) +
geom_point() +
scale_color_manual(values=c("blue", "red")) +
theme_map()
require(ggplot2)
require(ggmap)
install.packages("ggmap")
lon <- data$longitude
lat <- data$latitude
df <- as.data.frame(cbind(lon,lat))
mapgilbert <- get_map(location = c(lon = mean(df$lon), lat = mean(df$lat)), zoom = 4,
maptype = "satellite", scale = 2)
require(ggmap)
mapgilbert <- get_map(location = c(lon = mean(df$lon), lat = mean(df$lat)), zoom = 4,
maptype = "satellite", scale = 2)
ggmap(mapgilbert) +
geom_point(data = df, aes(x = lon, y = lat, fill = "red", alpha = 0.8), size = 5, shape = 21) +
guides(fill=FALSE, alpha=FALSE, size=FALSE)
mapgilbert <- get_map(location = c(lon = mean(df$lon), lat = mean(df$lat)), zoom = 8,
maptype = "satellite", scale = 2)
ggmap(mapgilbert) +
geom_point(data = df, aes(x = lon, y = lat, fill = "red", alpha = 0.8), size = 1, shape = 21) +
guides(fill=FALSE, alpha=FALSE, size=FALSE)
mapgilbert <- get_map(location = c(lon = mean(df$lon), lat = mean(df$lat)), zoom = 6,
maptype = "satellite", scale = 2)
# plotting the map with some points on it
ggmap(mapgilbert) +
geom_point(data = df, aes(x = lon, y = lat, fill = "red", alpha = 0.8), size = 2, shape = 21) +
guides(fill=FALSE, alpha=FALSE, size=FALSE)
mapgilbert <- get_map(location = c(lon = mean(df$lon), lat = mean(df$lat)), zoom = 6,
maptype = "hybrid", scale = 2)
# plotting the map with some points on it
ggmap(mapgilbert) +
geom_point(data = df, aes(x = lon, y = lat, fill = "red", alpha = 0.8), size = 2, shape = 21) +
guides(fill=FALSE, alpha=FALSE, size=FALSE)
ggmap(mapgilbert) +
geom_point(data = df, aes(x = lon, y = lat, fill = "red", alpha = 0.8), size = 2, shape = 21) +
guides(fill=FALSE, alpha=FALSE, size=FALSE) +
theme_map()
mapgilbert <- get_map(location = c(lon = mean(df$lon), lat = mean(df$lat)), zoom = 6,
maptype = "watercolor", scale = 2)
# plotting the map with some points on it
ggmap(mapgilbert) +
geom_point(data = df, aes(x = lon, y = lat, fill = "red", alpha = 0.8), size = 2, shape = 21) +
guides(fill=FALSE, alpha=FALSE, size=FALSE)
mapgilbert <- get_map(location = c(lon = mean(df$lon), lat = mean(df$lat)), zoom = 6,
maptype = "roadmap", scale = 2)
# plotting the map with some points on it
ggmap(mapgilbert) +
geom_point(data = df, aes(x = lon, y = lat, fill = "red", alpha = 0.8), size = 2, shape = 21) +
guides(fill=FALSE, alpha=FALSE, size=FALSE) +
ggtitle("Location of Contributors")
